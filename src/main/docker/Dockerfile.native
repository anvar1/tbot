####
# This Dockerfile is used in order to build a container that runs the Quarkus application in native (no JVM) mode
#
# Before building the docker image run:
#
# mvn package -Pnative -Dquarkus.native.container-build=true
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.native -t quarkus/tbot .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/tbot
#
###

## Stage 1 : build with gradle builder image with native capabilities
FROM quay.io/quarkus/centos-quarkus-maven:19.3.1-java11 AS build

## for maven
#COPY src /usr/src/app/src
#COPY pom.xml /usr/src/app
#USER root
#RUN chown -R quarkus /usr/src/app
#USER quarkus
#RUN mvn -f /usr/src/app/pom.xml -Pnative clean package

## for gradle
COPY gradlew /usr/src/app
COPY gradle /usr/src/app
COPY src /usr/src/app/src
COPY build.gradle /usr/src/app
COPY settings.gradle /usr/src/app
USER root
RUN chown -R quarkus /usr/src/app
USER quarkus
RUN ./gradlew buildNative --docker-build=true

## Stage 2 : create the docker final image
FROM registry.access.redhat.com/ubi8/ubi-minimal:8.1
ARG TELEGRAM_TOKEN=275570744:AAHK9EGlDhjeMvo1eOeMuxQUsBXtGOxfpqc

# see: https://github.com/quarkusio/quarkus/issues/4262
ENV DISABLE_SIGNAL_HANDLERS false

ENV telegram.token $TELEGRAM_TOKEN
WORKDIR /work/
COPY --from=build /usr/src/app/target/*-runner /work/application
RUN chmod 775 /work /work/application \
  && chown -R 1001 /work \
  && chmod -R "g+rwX" /work \
  && chown -R 1001:root /work
EXPOSE 8080
USER 1001
CMD ["./application", "-Dquarkus.http.host=0.0.0.0"]

